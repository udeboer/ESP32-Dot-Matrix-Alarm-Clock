// 8x8 bitmap. First character is width used in bitmap
// Remaining is bitmap. Each byte is one column. See char ! (number 33)
// No whitespace in character. Add spacing in code.
// From 32 and higher is ascii. And this is the same as lower 1 byte UTF8
// Made with MikroElectronika GLCD Font creator (needs compatibility set to
// Windows XP on Windows 10 to store files)
// char 10-19 are monospaced numbers for clock layout. char 20 double point.
#include <sys/types.h>

const u_int8_t font_8x8[][9] = {
    {0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // 00 0x00 Null not in use
    {0x05, 0x3E, 0x45, 0x51, 0x45, 0x3E, 0x00, 0x00, 0x00}, // 01 0x01 face
    {0x05, 0x3E, 0x6B, 0x6F, 0x6B, 0x3E, 0x00, 0x00, 0x00}, // 02 0x02 face reversed
    {0x05, 0x1C, 0x3E, 0x7C, 0x3E, 0x1C, 0x00, 0x00, 0x00}, // 03 0x03 heart small
    {0x07, 0x0E, 0x1F, 0x3F, 0x7E, 0x3F, 0x1F, 0x0E, 0x00}, // 04 0x04 heart large
    {0x05, 0x60, 0x70, 0x3F, 0x02, 0x04, 0x00, 0x00, 0x00}, // 05 0x05 music note
    {0x05, 0x18, 0x5C, 0x7E, 0x5C, 0x18, 0x00, 0x00, 0x00}, // 06 0x06 tree
    {0x03, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00}, // 07 0x07 larger dot
    {0x04, 0x7F, 0x3E, 0x1C, 0x08, 0x00, 0x00, 0x00, 0x00}, // 08 0x08 Pyramid pointing right
    {0x04, 0x08, 0x1C, 0x3E, 0x7F, 0x00, 0x00, 0x00, 0x00}, // 09 0x09 Pyramid pointing left
    {0x05, 0x3E, 0x41, 0x41, 0x41, 0x3E, 0x00, 0x00, 0x00}, // 10 0x0a Char 0 mono spaced
    {0x05, 0x00, 0x42, 0x7F, 0x40, 0x00, 0x00, 0x00, 0x00}, // 11 0x0b Char 1 mono spaced
    {0x05, 0x62, 0x51, 0x49, 0x49, 0x46, 0x00, 0x00, 0x00}, // 12 0x0c Char 2 mono spaced
    {0x05, 0x22, 0x49, 0x49, 0x49, 0x36, 0x00, 0x00, 0x00}, // 13 0x0d Char 3 mono spaced
    {0x05, 0x18, 0x14, 0x12, 0x7F, 0x10, 0x00, 0x00, 0x00}, // 14 0x0e Char 4 mono spaced
    {0x05, 0x2F, 0x49, 0x49, 0x49, 0x31, 0x00, 0x00, 0x00}, // 15 0x0f Char 5 mono spaced
    {0x05, 0x3C, 0x4A, 0x49, 0x49, 0x30, 0x00, 0x00, 0x00}, // 16 0x10 Char 6 mono spaced
    {0x05, 0x01, 0x71, 0x09, 0x05, 0x03, 0x00, 0x00, 0x00}, // 17 0x11 Char 7 mono spaced
    {0x05, 0x36, 0x49, 0x49, 0x49, 0x36, 0x00, 0x00, 0x00}, // 18 0x12 Char 8 mono spaced
    {0x05, 0x06, 0x49, 0x49, 0x29, 0x1E, 0x00, 0x00, 0x00}, // 19 0x13 Char 9 mono spaced
    {0x02, 0x36, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // 20 0x14 Double dot large
    {0x03, 0x5F, 0x00, 0x5F, 0x00, 0x00, 0x00, 0x00, 0x00}, // 21 0x15 Char Double exclamation
    {0x04, 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00}, // 22 0x16 Large dash
    {0x05, 0x14, 0xB6, 0xFF, 0xB6, 0x14, 0x00, 0x00, 0x00}, // 23 0x17 something
    {0x05, 0x04, 0x06, 0x7F, 0x06, 0x04, 0x00, 0x00, 0x00}, // 24 0x18 Arrow up
    {0x05, 0x10, 0x30, 0x7F, 0x30, 0x10, 0x00, 0x00, 0x00}, // 25 0x19 Arrow down
    {0x05, 0x08, 0x08, 0x3E, 0x1C, 0x08, 0x00, 0x00, 0x00}, // 26 0x1a Arrow right
    {0x05, 0x08, 0x1C, 0x3E, 0x08, 0x08, 0x00, 0x00, 0x00}, // 27 0x1b Arrow left
    {0x06, 0x1C, 0x3E, 0x7B, 0x7F, 0x77, 0x22, 0x00, 0x00}, // 28 0x1c Pacman open
    {0x07, 0x1C, 0x3E, 0x7B, 0x7F, 0x7F, 0x3E, 0x1C, 0x00}, // 29 0x1d Pacman closed
    {0x03, 0x70, 0x28, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00}, // 30 0x1e a small
    {0x03, 0x73, 0x2B, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00}, // 31 0x1d a small with dashes
    {0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // 32 0x20 Char space
    {0x01, 0x5F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // Char !
    {0x03, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00}, // Char "
    {0x05, 0x24, 0x7E, 0x24, 0x7E, 0x24, 0x00, 0x00, 0x00}, // Char #
    {0x04, 0x24, 0x2B, 0x6A, 0x12, 0x00, 0x00, 0x00, 0x00}, // Char $
    {0x05, 0x63, 0x13, 0x08, 0x64, 0x63, 0x00, 0x00, 0x00}, // Char %
    {0x05, 0x36, 0x49, 0x56, 0x20, 0x50, 0x00, 0x00, 0x00}, // Char &
    {0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // Char '
    {0x02, 0x3E, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // Char (
    {0x02, 0x41, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // Char )
    {0x05, 0x49, 0x3E, 0x1C, 0x3E, 0x49, 0x00, 0x00, 0x00}, // Char *
    {0x05, 0x10, 0x10, 0x7C, 0x10, 0x10, 0x00, 0x00, 0x00}, // Char +
    {0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // Char ,
    {0x04, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00}, // Char -
    {0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // Char .
    {0x05, 0x20, 0x10, 0x08, 0x04, 0x02, 0x00, 0x00, 0x00}, // Char /
    {0x05, 0x3E, 0x41, 0x41, 0x41, 0x3E, 0x00, 0x00, 0x00}, // Char 0
    {0x03, 0x42, 0x7F, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00}, // Char 1
    {0x05, 0x62, 0x51, 0x49, 0x49, 0x46, 0x00, 0x00, 0x00}, // Char 2
    {0x05, 0x22, 0x49, 0x49, 0x49, 0x36, 0x00, 0x00, 0x00}, // Char 3
    {0x05, 0x18, 0x14, 0x12, 0x7F, 0x10, 0x00, 0x00, 0x00}, // Char 4
    {0x04, 0x2F, 0x49, 0x49, 0x31, 0x00, 0x00, 0x00, 0x00}, // Char 5
    {0x05, 0x3C, 0x4A, 0x49, 0x49, 0x30, 0x00, 0x00, 0x00}, // Char 6
    {0x05, 0x01, 0x71, 0x09, 0x05, 0x03, 0x00, 0x00, 0x00}, // Char 7
    {0x05, 0x36, 0x49, 0x49, 0x49, 0x36, 0x00, 0x00, 0x00}, // Char 8
    {0x05, 0x06, 0x49, 0x49, 0x29, 0x1E, 0x00, 0x00, 0x00}, // Char 9
    {0x01, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // Char :
    {0x01, 0xC8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // Char ;
    {0x04, 0x08, 0x14, 0x22, 0x41, 0x00, 0x00, 0x00, 0x00}, // Char <
    {0x04, 0x24, 0x24, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00}, // Char =
    {0x04, 0x41, 0x22, 0x14, 0x08, 0x00, 0x00, 0x00, 0x00}, // Char >
    {0x05, 0x02, 0x01, 0x59, 0x09, 0x06, 0x00, 0x00, 0x00}, // Char ?
    {0x05, 0x3E, 0x41, 0x5D, 0x55, 0x1E, 0x00, 0x00, 0x00}, // Char @
    {0x05, 0x7E, 0x11, 0x11, 0x11, 0x7E, 0x00, 0x00, 0x00}, // Char A
    {0x05, 0x7F, 0x49, 0x49, 0x49, 0x36, 0x00, 0x00, 0x00}, // Char B
    {0x05, 0x3E, 0x41, 0x41, 0x41, 0x22, 0x00, 0x00, 0x00}, // Char C
    {0x05, 0x7F, 0x41, 0x41, 0x41, 0x3E, 0x00, 0x00, 0x00}, // Char D
    {0x05, 0x7F, 0x49, 0x49, 0x49, 0x41, 0x00, 0x00, 0x00}, // Char E
    {0x05, 0x7F, 0x09, 0x09, 0x09, 0x01, 0x00, 0x00, 0x00}, // Char F
    {0x05, 0x3E, 0x41, 0x49, 0x49, 0x7A, 0x00, 0x00, 0x00}, // Char G
    {0x05, 0x7F, 0x08, 0x08, 0x08, 0x7F, 0x00, 0x00, 0x00}, // Char H
    {0x03, 0x41, 0x7F, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00}, // Char I
    {0x05, 0x30, 0x40, 0x40, 0x40, 0x3F, 0x00, 0x00, 0x00}, // Char J
    {0x05, 0x7F, 0x08, 0x14, 0x22, 0x41, 0x00, 0x00, 0x00}, // Char K
    {0x04, 0x7F, 0x40, 0x40, 0x40, 0x00, 0x00, 0x00, 0x00}, // Char L
    {0x05, 0x7F, 0x02, 0x04, 0x02, 0x7F, 0x00, 0x00, 0x00}, // Char M
    {0x05, 0x7F, 0x02, 0x04, 0x08, 0x7F, 0x00, 0x00, 0x00}, // Char N
    {0x05, 0x3E, 0x41, 0x41, 0x41, 0x3E, 0x00, 0x00, 0x00}, // Char O
    {0x05, 0x7F, 0x09, 0x09, 0x09, 0x06, 0x00, 0x00, 0x00}, // Char P
    {0x05, 0x3E, 0x41, 0x51, 0x21, 0x5E, 0x00, 0x00, 0x00}, // Char Q
    {0x05, 0x7F, 0x09, 0x09, 0x19, 0x66, 0x00, 0x00, 0x00}, // Char R
    {0x05, 0x26, 0x49, 0x49, 0x49, 0x32, 0x00, 0x00, 0x00}, // Char S
    {0x05, 0x01, 0x01, 0x7F, 0x01, 0x01, 0x00, 0x00, 0x00}, // Char T
    {0x05, 0x3F, 0x40, 0x40, 0x40, 0x3F, 0x00, 0x00, 0x00}, // Char U
    {0x05, 0x1F, 0x20, 0x40, 0x20, 0x1F, 0x00, 0x00, 0x00}, // Char V
    {0x05, 0x3F, 0x40, 0x3C, 0x40, 0x3F, 0x00, 0x00, 0x00}, // Char W
    {0x05, 0x63, 0x14, 0x08, 0x14, 0x63, 0x00, 0x00, 0x00}, // Char X
    {0x05, 0x07, 0x08, 0x70, 0x08, 0x07, 0x00, 0x00, 0x00}, // Char Y
    {0x04, 0x71, 0x49, 0x45, 0x43, 0x00, 0x00, 0x00, 0x00}, // Char Z
    {0x02, 0x7F, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // Char [
    {0x05, 0x02, 0x04, 0x08, 0x10, 0x20, 0x00, 0x00, 0x00}, // Char BackSlash
    {0x02, 0x41, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // Char ]
    {0x05, 0x04, 0x02, 0x01, 0x02, 0x04, 0x00, 0x00, 0x00}, // Char ^
    {0x05, 0x40, 0x40, 0x40, 0x40, 0x40, 0x00, 0x00, 0x00}, // Char _
    {0x02, 0x03, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // Char `
    {0x05, 0x20, 0x54, 0x54, 0x54, 0x78, 0x00, 0x00, 0x00}, // Char a
    {0x05, 0x7F, 0x44, 0x44, 0x44, 0x38, 0x00, 0x00, 0x00}, // Char b
    {0x05, 0x38, 0x44, 0x44, 0x44, 0x28, 0x00, 0x00, 0x00}, // Char c
    {0x05, 0x38, 0x44, 0x44, 0x44, 0x7F, 0x00, 0x00, 0x00}, // Char d
    {0x04, 0x38, 0x54, 0x54, 0x54, 0x00, 0x00, 0x00, 0x00}, // Char e
    {0x04, 0x08, 0x7E, 0x09, 0x09, 0x00, 0x00, 0x00, 0x00}, // Char f
    {0x05, 0x18, 0xA4, 0xA4, 0xA4, 0x7C, 0x00, 0x00, 0x00}, // Char g
    {0x04, 0x7F, 0x04, 0x04, 0x78, 0x00, 0x00, 0x00, 0x00}, // Char h
    {0x01, 0x7D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // Char i
    {0x04, 0x40, 0x80, 0x84, 0x7D, 0x00, 0x00, 0x00, 0x00}, // Char j
    {0x04, 0x7F, 0x10, 0x28, 0x44, 0x00, 0x00, 0x00, 0x00}, // Char k
    {0x02, 0x3F, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // Char l
    {0x05, 0x7C, 0x04, 0x18, 0x04, 0x78, 0x00, 0x00, 0x00}, // Char m
    {0x04, 0x7C, 0x04, 0x04, 0x78, 0x00, 0x00, 0x00, 0x00}, // Char n
    {0x05, 0x38, 0x44, 0x44, 0x44, 0x38, 0x00, 0x00, 0x00}, // Char o
    {0x04, 0xFC, 0x24, 0x24, 0x18, 0x00, 0x00, 0x00, 0x00}, // Char p
    {0x04, 0x38, 0x44, 0x44, 0xB8, 0x00, 0x00, 0x00, 0x00}, // Char q
    {0x05, 0x44, 0x78, 0x44, 0x04, 0x08, 0x00, 0x00, 0x00}, // Char r
    {0x05, 0x08, 0x54, 0x54, 0x54, 0x20, 0x00, 0x00, 0x00}, // Char s
    {0x04, 0x04, 0x3E, 0x44, 0x24, 0x00, 0x00, 0x00, 0x00}, // Char t
    {0x04, 0x3C, 0x40, 0x40, 0x7C, 0x00, 0x00, 0x00, 0x00}, // Char u
    {0x05, 0x1C, 0x20, 0x40, 0x20, 0x1C, 0x00, 0x00, 0x00}, // Char v
    {0x05, 0x3C, 0x60, 0x30, 0x60, 0x3C, 0x00, 0x00, 0x00}, // Char w
    {0x04, 0x6C, 0x10, 0x10, 0x6C, 0x00, 0x00, 0x00, 0x00}, // Char x
    {0x04, 0x9C, 0xA0, 0x60, 0x3C, 0x00, 0x00, 0x00, 0x00}, // Char y
    {0x04, 0x64, 0x54, 0x54, 0x4C, 0x00, 0x00, 0x00, 0x00}, // Char z
    {0x04, 0x08, 0x3E, 0x41, 0x41, 0x00, 0x00, 0x00, 0x00}, // Char {
    {0x01, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // Char |
    {0x04, 0x41, 0x41, 0x3E, 0x08, 0x00, 0x00, 0x00, 0x00}, // Char }
    {0x04, 0x08, 0x04, 0x08, 0x04, 0x00, 0x00, 0x00, 0x00}, // Char ~
    {0x05, 0x3C, 0x26, 0x23, 0x26, 0x3C, 0x00, 0x00, 0x00}, // Char
};
